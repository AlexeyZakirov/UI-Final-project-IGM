plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "8.10.2"
}

repositories {
    mavenCentral();
}

def restAssuredVersion = "5.5.0",
    allureVersion = "2.29.0",
    junitVersion = "5.10.0",
    slf4jVersion = "2.0.7",
    javafakerVersion = "1.0.2",
    assertjVersion = "3.26.3",
    selenideVersion = "7.5.1",
    ownerVersion = "1.0.12"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "com.github.javafaker:javafaker:$javafakerVersion",
            "org.assertj:assertj-core:$assertjVersion",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.aeonbits.owner:owner:$ownerVersion"
    )
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task header_test(type: Test) {
    useJUnitPlatform {
        includeTags("header")
    }
}

task main_test(type: Test) {
    useJUnitPlatform {
        includeTags("main")
    }
}

task catalog_test(type: Test) {
    useJUnitPlatform {
        includeTags("catalog")
    }
}

task search_test(type: Test) {
    useJUnitPlatform {
        includeTags("search")
    }
}